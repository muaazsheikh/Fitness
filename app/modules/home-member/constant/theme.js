import { Dimensions } from "react-native";

const { width, height } = Dimensions.get("window");

export const COLORS = {
  primary: "#FF002E", // Red
  white: "#fff",
  lightWhite: "#ACACAC",
  red: "#FF5C5C",
  Lightred: "#FF7C7C",
  black: "#000000",
  blue: "#4096FE",
  lightBlue: "#253D91",
  gray: "#464646",
  gray1: "#363636",
  yellow: "#F6EB61",
  LightYellow: "#FFE486",
  Orange: "#D45700",
  LightOrange: "#FF8734",
  themGreen: "#CCFF00",
  lightGray: "#dedede",
  themeGray: "#1F2022",
  lightBlack: "#353638",
  transparentWhite: "rgba(255, 255, 255, 0.2)",
  transparentBlack: "rgba(0, 0, 0, 0.4)",
  borderColor: "#6E7781",
  calendarColor: "#2C2C2E",
  headerColor: "#323336",
  lightText: "#787878",
  placeholderColor: "#B6B6B6",
  transparent: "transparent",
  ligtRed: "#FF7070",
  lightOrange: "#FF8734",
};
export const SIZES = {
  // global sizes
  base: 8,
  font: 14,
  radius: 12,
  padding: 24,

  // font sizes
  largeTitle: 40,
  h1: 30,
  h2: 22,
  h3: 16,
  h4: 14,
  body1: 30,
  body2: 22,
  body3: 16,
  body4: 14,
  body5: 12,

  // app dimensions
  width,
  height,
};
export const FONTS = {
  largeTitle: { fontFamily: "Roboto-Black", fontSize: SIZES.largeTitle },
  h1: { fontFamily: "Roboto-Black", fontSize: SIZES.h1, lineHeight: 36 },
  h2: { fontFamily: "Roboto-Bold", fontSize: SIZES.h2, lineHeight: 30 },
  h3: { fontFamily: "Roboto-Bold", fontSize: SIZES.h3, lineHeight: 22 },
  h4: { fontFamily: "Roboto-Bold", fontSize: SIZES.h4, lineHeight: 22 },
  body1: {
    fontFamily: "Roboto-Regular",
    fontSize: SIZES.body1,
    lineHeight: 36,
  },
  body2: {
    fontFamily: "Roboto-Regular",
    fontSize: SIZES.body2,
    lineHeight: 30,
  },
  body3: {
    fontFamily: "Roboto-Regular",
    fontSize: SIZES.body3,
    lineHeight: 22,
  },
  body4: {
    fontFamily: "Roboto-Regular",
    fontSize: SIZES.body4,
    lineHeight: 22,
  },
  body5: {
    fontFamily: "Roboto-Regular",
    fontSize: SIZES.body5,
    lineHeight: 22,
  },
  ARCHI_BOLD: "Archivo-Bold",
  ARCHI_BLACK: "Archivo-Black",
  ARCHI_LIGHT: "Archivo-Light",
  ARCHI_MEDIUM: "Archivo-Medium",
  ARCHI_REGULAR: "Archivo-Regular",
  ARCHI_SEMBOLD: "Archivo-SemiBold",
};
export const CONTEXT = {
  loginTitle: "Login to your\n     Account",
  forgotPasswordText: "Forgot Password?",
  signInButtonText: "Log in",
  SeperatorText: "or continue with",
  signUpQuestionText: "Don't Have An Account ?",
  signUpButtonText: "Sign Up",
  titleText: "Choose Account Type",
  next: "Next",
  traineelog: "Trainer Login",
  trainer: "Trainer",
  member: "Member",
  accountTitle: "Choose Account Type",
  multiplegym: "Found at multiple gyms",
  welcomeTitle: "Letâ€™s improve\nyour workout!",
  socialText: "Login with",
  or: "or",
  signEmail: "Sign in with email",
  login: "Login",
  signup: "Sign Up",
  send: "Send",
  verify: "Verify",
  email: "Email",
  password: "Password",
  cpassword: "Confirm Password",
  signUpTitle: "Create account to\n    get start now!",
  forgetTitle: "Forgot Your Password?",
  verifyTitle: "Verification code",
  haveAccount: " have an account?",
  forget: "Forgot Password?",
  continue: "or continue with",
  sendAgain: "Send again?",
  sentmail: "We have sent  you email. ",
  splashTitle: "Workout That Get\n  Better As You do ",
  start: "Get Start",
  gymTitle: "Found at multiple gyms:",
  methewKim: "Mathew kim (F, 24(or bday))",
  session: "Session : 3/22",
  event: "Event description",
  search: "search",
  available: "Availability",
  RecentlySearched: "Recently Searched",
  SearchTrain: "Search trainee",
  ReserveRequest: "Reservation Request",
  reasonReject: "Reason for rejection written",
  ReserveCancel: "Reservation Cancellation Request",
  reject: "Reject",
  session_data: "Session",
  confirm: " Confirm",
  cancelled: "Cancelled",
  receivecode: "Did you received any code?",
  name: "Name",
  confirmed: " Confirmed",
  reservation_status: "Reservation Status",
  my_item: "My items",
  gym_membership: "Gym Membership",
  pt_sessions: "PT Sessions",
  golf_membership: "Golf Membership",
  group_exercise_membership: "Group Exercise Membership",
  request_for_refund: "Request for Refund",
  request: "Request",
  cancel: "Cancel",
  notice_information: "Notice information",
  request_for_holding: "Request for Holding",
  view: "View",
  gym_attendance: " Gym attendance",
  trainer_Workout: "Trainer workout log written",
  member_Workout: "Member workout log written",
  pt_reserved: "PT session reserved",
  diet_log_written: "Diet log written",
};

const appTheme = { COLORS, SIZES, FONTS, CONTEXT };

export default appTheme;
